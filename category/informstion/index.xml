<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>informstion | Academic</title>
    <link>https://example.com/category/informstion/</link>
      <atom:link href="https://example.com/category/informstion/index.xml" rel="self" type="application/rss+xml" />
    <description>informstion</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 28 May 2022 13:42:00 +0300</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>informstion</title>
      <link>https://example.com/category/informstion/</link>
    </image>
    
    <item>
      <title>Scientific programming languages.</title>
      <link>https://example.com/post/post8/</link>
      <pubDate>Sat, 28 May 2022 13:42:00 +0300</pubDate>
      <guid>https://example.com/post/post8/</guid>
      <description>&lt;p&gt;Data science is still an emerging field and thus has a high-demand and lucrative job market. But for anyone looking to break into the data science industry, getting started can be daunting.&lt;/p&gt;
&lt;p&gt;Some people go back to college, some teach themselves, and some attend data science bootcamps.&lt;/p&gt;
&lt;p&gt;Regardless of which path you pick, though, data science involves high coding expertise. And like with many technical fields, skill demand and expectations are always evolving. In this year 2021, here are the best data science programming languages to learn.&lt;/p&gt;
&lt;p&gt;First, just a little background into data science.
What is data science?&lt;/p&gt;
&lt;p&gt;Data Science is the study of information — and most companies are using data science to help make business decisions, solve complex problems and create strategies to improve results and performance. Data science is also heavily involved in machine learning, deep learning, and artificial intelligence.
Why should you become a data scientist?&lt;/p&gt;
&lt;p&gt;Learning data science can lead to a very lucrative career with a vast amount of employment opportunities. The demand for data scientists has greatly increased in recent years, and it will continue to do so, making now the perfect time to begin your journey to becoming a data scientist.&lt;/p&gt;
&lt;p&gt;If a high paying job is what you are looking for, then data science is the right path for you. The average data scientist in the USA is making $113k per year, which is far beyond the national average income.  It’s also much higher than the average salary for than your typical data analyst.
How do I get started in data science?&lt;/p&gt;
&lt;p&gt;Data science does not require a 4-year degree but it is still necessary to become highly educated in the field, especially in big data and math. The best way to do this is by learning one or a couple more programming languages that are used in the field.&lt;/p&gt;
&lt;p&gt;So, what coding languages do you need for data science? And what are the best language languages to learn to become a data scientist? We are going to take a deep dive into the many options that you should explore.
What are programming languages?&lt;/p&gt;
&lt;p&gt;Programming languages, to put it simply, are the languages used to write lines of code that make up a software program. These lines of code are digital instructions, commands, and other syntaxes that are translated into digital output. There are 5 main types of programming languages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Procedural Programming Languages

Functional Programming Languages

Object-Oriented Programming Languages

Scripting Programming Languages

Logic Programming
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each of these programming language types serves different functions and has specific advantages and disadvantages.
What you need to consider when choosing the best programming language for your data science career path&lt;/p&gt;
&lt;p&gt;The first thing to consider is the goal that you are trying to accomplish. Different tasks will require different levels of knowledge and specific languages may be more suited for the tasks that you are looking to complete.&lt;/p&gt;
&lt;p&gt;Next you need to figure out how data science can help you accomplish the task at hand. Data science can automate or streamline many tasks that you may already be handling. This can save you a lot of time, and money.&lt;/p&gt;
&lt;p&gt;You also need to figure out how skilled you are in the programming language(s) that you already know, and then decipher if you are ready to take your knowledge and bring it to the next level.&lt;/p&gt;
&lt;p&gt;The last thing you will need to discover is at what scale your organization is using data science. This will help you determine what languages to learn as well as how you should learn to use them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Report formatting in markdown</title>
      <link>https://example.com/post/post6/</link>
      <pubDate>Sat, 21 May 2022 12:18:45 +0300</pubDate>
      <guid>https://example.com/post/post6/</guid>
      <description>&lt;p&gt;Reports with R Markdown&lt;/p&gt;
&lt;p&gt;Making plots and being able to write output files is important. However, the most important part of any analysis is communicating your findings effectively! The rmarkdown package is one of the best and easiest ways of doing this. It let’s you create a fancy looking report without ever leaving RStudio. You can interleave your code and plots together with explanation text and formatting you might normally do in a tool like Microsoft Word. You can even make websites with it (like this one!)!&lt;/p&gt;
&lt;p&gt;Let’s get started with R Markdown and make ourselves a sweet report.
Creating an R Markdown notebook&lt;/p&gt;
&lt;p&gt;In RStudio, go to File -&amp;gt; New File -&amp;gt; R Markdown. It will ask you what you want to call the file - leave the output as HTML for now.&lt;/p&gt;
&lt;p&gt;You should see a file open with a lot of text and code already there. This is the default R Markdown document and comes with a lot of pointers about how to do things. For now, save the file as example.Rmd, and hit the “Knit” button.&lt;/p&gt;
&lt;p&gt;If everything went well, you should see a nicely formatted webpage/ report pop up in RStudio’s built-in browser. Congratulations, you’ve made your first report!
The stuff between the &amp;mdash;s is called YAML - it’s a markup format that describes what kind of document to make, who wrote it, and other technical bits that’s not actual content in your report. If you want, you can modify it, but let’s leave it be for now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markdown language</title>
      <link>https://example.com/post/post4/</link>
      <pubDate>Sat, 14 May 2022 14:16:47 +0300</pubDate>
      <guid>https://example.com/post/post4/</guid>
      <description>&lt;p&gt;Markdown is a simple syntax that formats text as headers, lists, boldface, and so on. This markup language is popular, and you definitely have apps that support it. Here’s a quick primer on what Markdown is, and how and where you can use it.
What Is Markdown?&lt;/p&gt;
&lt;p&gt;When you add bold, italics, numbered lists, bullet points, headings, and so on to text, you’re “formatting” it. Markdown is a syntax—or, set of rules—that formats text on web pages.&lt;/p&gt;
&lt;p&gt;Traditionally, to format text on web pages, people used Hypertext Markup Language, better known as HTML. HTML is one member of the family of markup languages, along with eXtensible Markup Language (XML) and Standard Generalized Markup Language (SGML).S&lt;/p&gt;
&lt;p&gt;The tags, however, make it quite difficult for humans to read HTML and understand how the text will look after the computer renders it. It’s not very “user-friendly” for people who don’t have a lot of experience reading it.&lt;/p&gt;
&lt;p&gt;Markdown, on the other hand, is meant “to be as easy-to-read and easy-to-write as is feasible.” John Gruber and Aaron Schwartz explain why they created Markdown in 2004 and provide a guide to the syntax on Gruber’s website.&lt;/p&gt;
&lt;p&gt;In short, Markdown makes it easier to format text for web pages because its tags are simpler than HTML, and they convert to HTML automatically. This means you don’t have to know HTML to write something for a web page because Markdown translates your tags into HTML for you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Versioning .git</title>
      <link>https://example.com/post/post2/</link>
      <pubDate>Sat, 07 May 2022 15:26:18 +0300</pubDate>
      <guid>https://example.com/post/post2/</guid>
      <description>&lt;p&gt;What is “version control”, and why should you care? Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. For the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.&lt;/p&gt;
&lt;p&gt;If you are a graphic or web designer and want to keep every version of an image or layout (which you would most certainly want to), a Version Control System (VCS) is a very wise thing to use. It allows you to revert selected files back to a previous state, revert the entire project back to a previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more. Using a VCS also generally means that if you screw things up or lose files, you can easily recover. In addition, you get all this for very little overhead.
Local Version Control Systems&lt;/p&gt;
&lt;p&gt;Many people’s version-control method of choice is to copy files into another directory (perhaps a time-stamped directory, if they’re clever). This approach is very common because it is so simple, but it is also incredibly error prone. It is easy to forget which directory you’re in and accidentally write to the wrong file or copy over files you don’t mean to.&lt;/p&gt;
&lt;p&gt;To deal with this issue, programmers long ago developed local VCSs that had a simple database that kept all the changes to files under revision control.
One of the most popular VCS tools was a system called RCS, which is still distributed with many computers today. RCS works by keeping patch sets (that is, the differences between files) in a special format on disk; it can then re-create what any file looked like at any point in time by adding up all the patches.
Centralized Version Control Systems&lt;/p&gt;
&lt;p&gt;The next major issue that people encounter is that they need to collaborate with developers on other systems. To deal with this problem, Centralized Version Control Systems (CVCSs) were developed. These systems (such as CVS, Subversion, and Perforce) have a single server that contains all the versioned files, and a number of clients that check out files from that central place. For many years, this has been the standard for version control.&lt;/p&gt;
&lt;p&gt;This setup offers many advantages, especially over local VCSs. For example, everyone knows to a certain degree what everyone else on the project is doing. Administrators have fine-grained control over who can do what, and it’s far easier to administer a CVCS than it is to deal with local databases on every client.&lt;/p&gt;
&lt;p&gt;However, this setup also has some serious downsides. The most obvious is the single point of failure that the centralized server represents. If that server goes down for an hour, then during that hour nobody can collaborate at all or save versioned changes to anything they’re working on. If the hard disk the central database is on becomes corrupted, and proper backups haven’t been kept, you lose absolutely everything — the entire history of the project except whatever single snapshots people happen to have on their local machines. Local VCSs suffer from this same problem — whenever you have the entire history of the project in a single place, you risk losing everything.
Distributed Version Control Systems&lt;/p&gt;
&lt;p&gt;This is where Distributed Version Control Systems (DVCSs) step in. In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don’t just check out the latest snapshot of the files; rather, they fully mirror the repository, including its full history. Thus, if any server dies, and these systems were collaborating via that server, any of the client repositories can be copied back up to the server to restore it. Every clone is really a full backup of all the data.
Furthermore, many of these systems deal pretty well with having several remote repositories they can work with, so you can collaborate with different groups of people in different ways simultaneously within the same project. This allows you to set up several types of workflows that aren’t possible in centralized systems, such as hierarchical models.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
